.topic-reply.row
  %a{:name => "post#{post.id}"}
  .discussions.twelve.columns
    .topic-view
      - if post.pending_review?
        .moderation
          = t(".pending_review")
          - if forem_admin_or_moderator?(post.topic.forum)
            - if local_assigns[:mass_moderation]
              = render "forem/posts/moderation_tools", :post => post
            - else
              = form_tag forem.forum_moderate_posts_path(post.topic.forum), :method => :put do
                = render "forem/posts/moderation_tools", :post => post

      .one.columns.avatar
        = link_to image_tag(post.user.avatar.url(:thumb)), main_app.user_path(post.user)

      .eleven.columns.topic-info
        .username= link_to post.user, main_app.user_path(post.user)
        %p.sub-text{:datetime => post.created_at.to_s(:db)}= "#{time_ago_in_words(post.created_at)} #{t("ago")}"
        .topic-body 
          = forem_format(post.text)

      .row
        .toolbar
          %ul
            - if forem_user
              - if can?(:reply, post.topic)
                - if post.topic.can_be_replied_to?
                  %li.reply-button 
                    <i class="icon-reply"></i> 
                    = link_to t('Reply', :scope => 'forem.topic'), forem.new_topic_post_path(post.topic, :reply_to_id => post.id)

              - if post.topic.can_be_replied_to?
                %li.quote-button 
                  <i class="icon-quote-left"></i> 
                  = link_to t('Quote', :scope => 'forem.topic'), forem.new_topic_post_path(post.topic, :reply_to_id => post.id, :quote => true)

              - if post.owner_or_admin?(forem_user)
                - if can?(:edit_post, post.topic.forum)
                  %li.edit-button 
                    <i class="icon-pencil"></i>
                    = link_to t('Edit', :scope => 'forem.post'), forem.edit_topic_post_path(post.topic, post)
                %li.delete-button 
                  <i class="icon-trash"></i> 
                  = link_to t('Delete', :scope => 'forem.topic'), forem.topic_post_path(post.topic, post), :method => :delete, :confirm => t("are_you_sure")

/ %a{:name => "post-#{post.id}"}
/ <div id='post_#{post_counter + 1}' class='post #{cycle('odd', 'even')}'>
/ .user
/   .username
/     = link_to_if Forem.user_profile_links, post.user, [main_app, post.user]
/   .icon= forem_avatar(post.user, :size => 60)
/ .contents
/   - if post.pending_review?
/     .moderation
/       = t(".pending_review")
/       - if forem_admin_or_moderator?(post.topic.forum)
/         - if local_assigns[:mass_moderation]
/           = render "forem/posts/moderation_tools", :post => post
/         - else
/           = form_tag forem.forum_moderate_posts_path(post.topic.forum), :method => :put do
/             = render "forem/posts/moderation_tools", :post => post

/   %a{:href => "#post-#{post.id}"}
/     %time{:datetime => post.created_at.to_s(:db)}= "#{time_ago_in_words(post.created_at)} #{t("ago")}"
/   = forem_format(post.text)
/   - if post.reply_to
/     %span.in_reply_to
/       = link_to "#{t("forem.post.in_reply_to")} #{post.reply_to.user}", "#post-#{post.reply_to.id}"

/   %ul.actions
/     - if forem_user
/       - if can?(:reply, post.topic)
/         - if post.topic.can_be_replied_to?
/           %li= link_to t('reply', :scope => 'forem.topic'), forem.new_topic_post_path(post.topic, :reply_to_id => post.id)
/         - if post.topic.can_be_replied_to?
/           %li= link_to t('quote', :scope => 'forem.topic'), forem.new_topic_post_path(post.topic, :reply_to_id => post.id, :quote => true)

/       - if post.owner_or_admin?(forem_user)
/         - if can?(:edit_post, post.topic.forum)
/           %li= link_to t('edit', :scope => 'forem.post'), forem.edit_topic_post_path(post.topic, post)
/         %li= link_to t('delete', :scope => 'forem.topic'), forem.topic_post_path(post.topic, post), :method => :delete, :confirm => t("are_you_sure")
