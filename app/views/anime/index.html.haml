.anime-discover
  .row.content-body
    / Side Bar

    %section#sidebar
      .three.mobile-twelve.columns
        %ul.accordion
          %li.active
            .title
              %h3 Personalize
            .personalize-filter.content
              %p{:class => ("active" if @filter == "all")}
                = link_to 'All Anime', anime_index_path(:genres => params[:genres])
              %p{:class => ("active" if @filter == "recommended")}
                = link_to 'My Recommendations', filtered_listing_path(:recommended, :genres => params[:genres])
              %p{:class => ("active" if @filter == "unseen")}
                = link_to "Anime I Haven't Seen", filtered_listing_path(:unseen, :genres => params[:genres])
              %p{:class => ("active" if @filter == "unfinished")}
                = link_to "Anime I Haven't Finished", filtered_listing_path(:unfinished, :genres => params[:genres])

        %ul.accordion
          %li.active    
            .title
              %h3 Filter
            .content
              %form.custom{:action => genres_path, :method => :get}
                .row
                  .twelve.columns
                    .six.mobile-two.columns
                      %a.disable_all Deselect All
                    .six.mobile-two.columns
                      %a.enable_all Select All
                    .twelve.columns
                      %input.apply-button.button(type="submit" value="Apply")

                    - @all_genres.each do |genre|
                      %label{:for => "g_" + genre.slug, "data-width" => "300", :title => genre.description, :class => ("checked" if @genre_filter.include? genre)}
                        %input{:checked => @genre_filter.include?(genre), :name => "g_" + genre.slug, :id => "g_" + genre.slug, :style => "display: none", :type => "checkbox", :value => ".g_#{genre.slug}"}
                        %span.custom.checkbox{:class => ("checked" if @genre_filter.include? genre)}
                        = genre.name

      


    / Thumbnails
    .anime-grid.nine.columns
      - if @filter == "recommended" and !current_user.recommendations_up_to_date
        %div.alert-box
          %span.updating_recommendations We're updating your recommendations. 
          %span.check_back Check back in a minute!
        :javascript
          function checkForCompletion() {
            $.getJSON("/users.json", function(data) { 
              if (!data["recommendations_up_to_date"]) {
                $("span.check_back").html("Hang on!");
                setTimeout("checkForCompletion()", 5000);
              }
              else {
                $("span.updating_recommendations").html("We're done updating your recommendations.");
                $("span.check_back").html("<a href='/anime/filter/recommended'>Click here to check them out!</a>");
              }
            });
          }
          checkForCompletion();
      .row
        - if @collection.length > 0
          = render partial: "anime/card", collection: @collection, as: :data
        - else
          .not-found.panel
            .title.twelve-columns
              %h3 We couldn't find what you were looking for!
              %p To make up for that, here's some random anime... have fun!

          //= render random anime here. Amount is up to you.

      .row.pagination-centered
        = paginate(@anime)



  :javascript
    // Filter functionality.
    // TODO make disableAllGenres and enableAllGenres faster.
    function disableAllGenres() {
      $("span.custom.checkbox.checked").click();
    }
    function enableAllGenres() {
      disableAllGenres();
      $("span.custom.checkbox").click();
    }
    $(".disable_all").click(disableAllGenres);
    $(".enable_all").click(enableAllGenres);
