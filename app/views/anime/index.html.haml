.anime-discover
  .filter-toolbar{:style => "background: white; position: relative; height: 50px; margin-bottom: 50px;"}
    .row
      .twelve.columns
        %form.autosubmit
          %ul.inline-list
            %li.three.columns
              %select{:class => "single-select", :name => "single-select"}
                %option 
                  %i.icon-globe
                  All Anime
                %option
                  %i.icon-heart
                  Recommendations
                %option
                  %i.icon-eye-close
                  Haven't Seen
                %option
                  %i.icon-tasks
                  Haven't finished

          %ul.inline-list
            %li.three.columns
              %select{:multiple => "multiple", :class => "multiple-select", :name => "genres[]"}
                - @all_genres.each do |genre|
                  %option{:value => "#{genre.name.downcase}", :selected => ("selected" if @genre_filter.include? genre)}
                    %i.icon-film
                    = genre.name

          %ul.inline-list
            %li.three.columns
              %select{:multiple => "multiple", :class => "multiple-nofilter", :name => "multiple-nofilter"}
                %option
                  Series
                %option
                  OVA / SPECIAL


          %ul.inline-list
            %li.three.columns
              %select{:multiple => "multiple", :class => "multiple-nofilter", :name => "multiple-nofilter"}
                %option{:selected => "selected"}
                  Watch Anywhere
                %option{:disabled => "disabled"}
                  Netflix
                %option{:disabled => "disabled"}
                  Hulu
                %option{:disabled => "disabled"}
                  Crunchyroll
                %option{:disabled => "disabled"}
                  Funimation
                %option{:disabled => "disabled"}
                  Viz

  .row.content-body
    /     %ul.accordion
    /       %li.active    
    /         .title
    /           %h3 Filter
    /         .content
    /           %form.custom{:action => genres_path, :method => :get}
    /             .row
    /               .twelve.columns
    /                 .six.mobile-two.columns
    /                   %a.disable_all Deselect All
    /                 .six.mobile-two.columns
    /                   %a.enable_all Select All
    /                 .twelve.columns
    /                   %input.apply-button.button(type="submit" value="Apply")

    /                 - @all_genres.each do |genre|
    /                   %label{:for => "g_" + genre.slug, "data-width" => "300", :title => genre.description, :class => ("checked" if @genre_filter.include? genre)}
    /                     %input{:checked => @genre_filter.include?(genre), :name => "g_" + genre.slug, :id => "g_" + genre.slug, :style => "display: none", :type => "checkbox", :value => ".g_#{genre.slug}"}
    /                     %span.custom.checkbox{:class => ("checked" if @genre_filter.include? genre)}
    /                     = genre.name

      


    / Thumbnails

    .anime-grid.twelve.columns
      - if @filter == "recommended" and !current_user.recommendations_up_to_date
        %div.alert-box
          %span.updating_recommendations We're updating your recommendations. 
          %span.check_back Check back in a minute!
        :javascript
          function checkForCompletion() {
            $.getJSON("/users.json", function(data) { 
              if (!data["recommendations_up_to_date"]) {
                $("span.check_back").html("Hang on!");
                setTimeout("checkForCompletion()", 5000);
              }
              else {
                $("span.updating_recommendations").html("We're done updating your recommendations.");
                $("span.check_back").html("<a href='/anime/filter/recommended'>Click here to check them out!</a>");
              }
            });
          }
          checkForCompletion();
      .row
        - if @collection.length > 0
          = render partial: "anime/card", collection: @collection, as: :data
        - else
          .not-found.panel
            .title.twelve-columns
              %h3 We couldn't find what you were looking for!
              %p To make up for that, here's some random anime... have fun!

          //= render random anime here. Amount is up to you.

      .row.pagination-centered
        = paginate(@anime)

- if user_signed_in?
  = render partial: "watchlists/form_modal", collection: @collection.map {|x| x[1] || Watchlist.new(user: current_user, anime: x[0]) }, as: :watchlist


  
:javascript
  $(".multiple-select").multiselect().multiselectfilter();

:javascript
  $(".multiple-nofilter").multiselect();

:javascript
  $(".single-select").multiselect({
   multiple: false,
   header: "Select an option",
   noneSelectedText: "Select an Option",
   selectedList: 1

    // // Filter functionality.
    // // TODO make disableAllGenres and enableAllGenres faster.
    // function disableAllGenres() {
    //   $("span.custom.checkbox.checked").click();
    // }
    // function enableAllGenres() {
    //   disableAllGenres();
    //   $("span.custom.checkbox").click();
    // }
    // $(".disable_all").click(disableAllGenres);
    // $(".enable_all").click(enableAllGenres);
