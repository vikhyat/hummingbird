.panel
  %h1(style="text-align: center")= title "Admin Panel"

.row

  .large-3.columns
    .panel
      %ul
        %li= link_to "Biribiri Admin", "/kotodama/rails_admin", class: 'button padded'
        %li= link_to "Sidekiq Dashboard", "/kotodama/sidekiq", class: 'button padded secondary'
        %li= link_to "Beanstalkd View", "/kotodama/beanstalkd", class: 'button padded secondary'
        %li= link_to "A/B Tests", "/kotodama/split", class: 'button padded secondary'

  .panel.large-9.columns
    .row
      .large-6.columns
        %h4 Actions
        %hr
        .panel
          %h5 Create or Update by MAL ID
          %form(method="get" action="/kotodama/find_or_create_by_mal")
            .row.collapse
              .large-8.columns
                %input(type="number" name="mal_id" placeholder="MAL ID")
              .large-4.columns
                %input.button.small.prefix(type="submit" value="Submit")

        .panel
          %h5 Anime without MAL IDs
          - if @anime_without_mal_id.length > 0
            %ul
              - @anime_without_mal_id.each do |anime|
                %li= anime_link anime
          - else
            %em (Nothing here.)

      .large-6.columns
        %h4 Statistics
        %hr

        %h5 Registrations over the last week
        %canvas(id="registrations" height="200" width="400")


%script(src="//cdnjs.cloudflare.com/ajax/libs/Chart.js/0.2.0/Chart.min.js")
:coffee
  $.getJSON "/kotodama/stats", (data) ->
    console.log data
    # Registration chart
    labels = Object.keys(data["registrations"]["total"])
    confirmed = []
    total = []
    labels.forEach (key) ->
      confirmed.push data["registrations"]["confirmed"][key]
      total.push data["registrations"]["total"][key]
    ctx = document.getElementById("registrations").getContext("2d")
    chart = new Chart(ctx).Line
      labels: labels
      datasets: [
        {
          fillColor : "rgba(220,220,220,0.5)",
          strokeColor : "rgba(220,220,220,1)",
          pointColor : "rgba(220,220,220,1)",
          pointStrokeColor : "#fff",
          data: total
        },
        {
          fillColor : "rgba(151,187,205,0.5)",
          strokeColor : "rgba(151,187,205,1)",
          pointColor : "rgba(151,187,205,1)",
          pointStrokeColor : "#fff",
          data: confirmed
        }
      ]
