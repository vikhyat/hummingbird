.hummingbird-header
  %nav.sticky_nav
    %ul.nav-bar.main
      %li.nav-logo
        %a.logo{:href => "/"} Hummingbird
      / Dropdown Lists for Navbar
      %li.site-links
        %ul
          %li
            %a{:href => "/anime"} Discover
          %li
            = link_to "Dashboard", "/dashboard"
          %li
            = link_to "Community", forem.root_path 
      %li.search
        %span.search_btn.ss-icon
        .top
          %form#live_search_form{:action => "/search", :autocomplete => "off"}
            %input.typeahead#nav_search_input(type="text" name="query"){:placeholder => "Search Anime by Title", :value => params[:query], :autocomplete => "off"}
            %input#nav_search_submit.submit.ss-icon{:type => "submit", :value => "search"}

      %li.nav_user.has-flyout
        :javascript
          (function(d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s);
            js.id = id;
            js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=452427161479702";
            fjs.parentNode.insertBefore(js, fjs);
          }(document, 'script', 'facebook-jssdk'));
        
        - if user_signed_in?
          %span.avatar= link_to image_tag(current_user.avatar_url), main_app.user_path(current_user) 

          %a.flyout-toggle{:href => "#{main_app.user_path(current_user)}"}
            %span
          %ul.flyout
            %li
              = link_to "Edit profile", main_app.edit_user_registration_path
            - if current_user.admin?
              %li 
                = link_to "Admin panel", "/kotodama"
            %li
              = link_to "Sign out", main_app.destroy_user_session_path, :method => :delete
        - else
          %span= link_to "login", main_app.new_user_session_path
          %span or
          %span= link_to "register", main_app.new_user_registration_path


  - unless @hide_cover_image
    %figure
      - @overlay_quote = overlay_quote_from_anime(@anime)
      .overlay
        .row
          .eight.columns.offset-by-two
            %h5.title= @overlay_quote.content
            %p
              = @overlay_quote.character_name
              (#{link_to @overlay_quote.anime.canonical_title(current_user), main_app.anime_path(@overlay_quote.anime)})
          .two.columns
            .quote-vote
              = render partial: "quotes/votes", locals: {quote: @overlay_quote}
      - if (@overlay_image = @overlay_quote.anime.gallery_images.order('RANDOM()').first)
        = image_tag @overlay_image.image.url, style: 'width: 100%'

- flash.each do |style, message|
  .alert-box{:class => style.to_s}= message
